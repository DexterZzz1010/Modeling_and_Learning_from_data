model FurutaPendulum "Furuta pendulum"
    
    parameter Real pendulumA_start = -Modelica.Constants.pi;
    
    model ControllerLQR
      Modelica.Blocks.Interfaces.RealInput phi, dphi , theta1 , dtheta1 , theta2 , dtheta2 ;
      Modelica.Blocks.Interfaces.RealOutput u(start=0.0);
      //Real L[6]={ 316.227766  ,  23.70108135, 276.05731962 , -9.89742254,125.80575278 , -13.51314437 };
      //Real L[6]={ 999.99999957  ,74.94047244 ,872.9208107  ,-31.30619161 ,397.64456395,-42.73586553 };
      Real L[6]={   1 ,1.24272358 ,374.73428371 ,26.07636106, -236.45846667,-10.57966294 };
      Real x[6];
    equation  
      x = {phi+3.14/2, dphi, theta1+3.14, dtheta1, theta2+3.14, dtheta2};
      //u = -(100 * x[1] + 9.65721819 * x[2] + 103.07438354 * x[3] - 1.40000991 * x[4] + 87.40106372 * x[5] - 3.88918398 * x[6]);
        //u =0;
      //u = -(31.6227766 * x[1] + 12.05359808 * x[2] + 98.27887786 * x[3] + 6.75643068 * x[4] + 225.83930595 * x[5] + 0.366626 * x[6]);
      u = -(L[1] * x[1] + L[2] * x[2] + L[3] * x[3] + L[4] * x[4] + L[5] * x[5] + L[6] * x[6]);
    end ControllerLQR;
    
    inner Modelica.Mechanics.MultiBody.World world(
      axisLength(displayUnit="mm"),
      axisDiameter(displayUnit="mm"),
      nominalLength(displayUnit="mm") = 0.1)
                                annotation (Placement(transformation(extent={{-72.0,-28.0},{-52.0,-8.0}},   rotation=0.0,origin = {0.0,0.0})));
    Modelica.Mechanics.MultiBody.Joints.Revolute rotor(
      a(fixed=false),
      w(fixed=true),
      cylinderLength(displayUnit="mm") = 0.015,
      cylinderColor={0,0,0},
      cylinderDiameter(displayUnit="mm") = 0.0605,
      useAxisFlange=true,
      phi(fixed=true, start=-1.5707963267949),n = {0,1,0}) annotation (Placement(
          transformation(
          origin={0,32},
          extent={{-10,-10},{10,10}},
          rotation=90)));
    Modelica.Mechanics.MultiBody.Joints.Revolute pendulumAxis(
      a(fixed=false),
      w(fixed=true),
      cylinderLength(displayUnit="mm") = 0.005,
      cylinderDiameter(displayUnit="mm") = 0.005,
      cylinderColor={200,200,200},
      useAxisFlange=true,
      n={-1,0,0},
      phi(
        fixed=true,
        start=0.05480333851262189216,
        displayUnit="rad")) annotation (Placement(transformation(extent={{48.0,74.0},{68.0,94.0}}, rotation=0.0,origin = {0.0,0.0})));
    Modelica.Mechanics.MultiBody.Parts.BodyCylinder base(
      r(displayUnit="mm") = {0,0.1,0},
      r_shape(displayUnit="mm") = {0,0,0},
      diameter(displayUnit="mm") = 0.06,
      color={155,155,155},
      r_0(displayUnit="mm", fixed=true)) annotation (Placement(transformation(
          extent={{-10,-10},{10,10}},
          rotation=90,
          origin={0,-26})));
    Modelica.Mechanics.MultiBody.Parts.BodyCylinder pendulumArm(
      r_shape(displayUnit="mm") = {0,0,0},
      diameter(displayUnit="mm") = 0.005,
      color={200,200,200},
      r(displayUnit="mm") = {0,0.075,0},
      density=3700) annotation (Placement(transformation(
          extent={{-10.0,-10.0},{10.0,10.0}},
          rotation=-90.0,
          origin={70.0,2.0})));
    Modelica.Mechanics.MultiBody.Parts.Fixed fixed(
      length=0,
      width=0,
      height=0,
      r(displayUnit="mm") = {0,-0.025,-0.1})
      annotation (Placement(transformation(extent={{-10,-10},{10,10}},
          rotation=90,
          origin={0,-52})));
    Modelica.Mechanics.Rotational.Components.Damper pendulumDamper(d=0.00005)
      annotation (Placement(transformation(
          extent={{-10.0,-10.0},{10.0,10.0}},
          rotation=180.0,
          origin={57.599999999999994,104.8})));
    Modelica.Mechanics.Rotational.Components.Damper rotorDamper(d=0.03) annotation (
        Placement(transformation(
          extent={{-10,-10},{10,10}},
          rotation=180,
          origin={-24,42})));
    Modelica.Mechanics.MultiBody.Parts.BodyCylinder pendulumAttachment(
      r_shape(displayUnit="mm") = {0,0,0},
      diameter(displayUnit="mm") = 0.005,
      color={155,155,155},
      r(displayUnit="mm") = {0.043,0,0},
      density=3700) annotation (Placement(transformation(
          extent={{15.599999999999994,74.8},{35.599999999999994,94.8}},
          rotation=0.0,
          origin={0.0,0.0})));

    Modelica.Mechanics.Rotational.Sensors.AngleSensor pendulumA
      annotation (Placement(transformation(extent={{87.6,82.8},{101.6,96.8}},rotation = 0.0,origin = {0.0,0.0})));
    Modelica.Mechanics.Rotational.Sensors.SpeedSensor pendulumW
      annotation (Placement(transformation(extent={{87.6,98.8},{101.6,112.8}},rotation = 0.0,origin = {0.0,0.0})));
    Modelica.Mechanics.Rotational.Sensors.AngleSensor rotorA
      annotation (Placement(transformation(extent={{-20,-12},{-6,2}})));
    Modelica.Mechanics.Rotational.Sensors.SpeedSensor rotorW
      annotation (Placement(transformation(extent={{-20,2},{-6,16}})));
    Modelica.Blocks.Sources.Pulse pulse[3](
      startTime={1,1,1},
      width={1,1,1},
      period={10,10,10},
      amplitude={0.1,0,0})   annotation (Placement(transformation(
          extent={{-6,-6},{6,6}},
          rotation=0,
          origin={32,-32})));
    Modelica.Mechanics.MultiBody.Forces.WorldForce disturbance
      annotation (Placement(transformation(extent={{50,-40},{66,-24}})));
    .Modelica.Mechanics.MultiBody.Parts.BodyCylinder pendulumArm2(density = 3700,r(displayUnit = "mm") = {0,0.030,0},color = {200,200,200},diameter(displayUnit = "mm") = 0.005,r_shape(displayUnit = "mm") = {0,0,0}) annotation(Placement(transformation(extent = {{-10.0,-10.0},{10.0,10.0}},rotation = -90.0,origin = {110.0,2.0})));
    .Modelica.Mechanics.MultiBody.Forces.WorldForce disturbance2 annotation(Placement(transformation(extent = {{50.0,-54.0},{66.0,-38.0}},rotation = 0.0,origin = {0.0,0.0})));
    .Modelica.Mechanics.Rotational.Sensors.AngleSensor pendulumA2 annotation(Placement(transformation(extent = {{120.72,45.36000000000001},{134.72,59.36000000000001}},rotation = 0.0,origin = {0.0,0.0})));
    .Modelica.Mechanics.Rotational.Sensors.SpeedSensor pendulumW2 annotation(Placement(transformation(extent = {{120.72,61.360000000000014},{134.72,75.36000000000001}},rotation = 0.0,origin = {0.0,0.0})));
    .Modelica.Mechanics.MultiBody.Joints.Revolute pendulumAxis2(phi(fixed = true,start = 0.05480333851262189216,displayUnit = "rad"),n = {1,0,0},useAxisFlange = true,cylinderColor = {200,200,200},cylinderDiameter(displayUnit = "mm") = 0.005,cylinderLength(displayUnit = "mm") = 0.005,w(fixed = true),a(fixed = false)) annotation(Placement(transformation(extent = {{80.72,37.36000000000001},{100.72,57.36000000000001}},rotation = 0.0,origin = {0.0,0.0})));
    .Modelica.Mechanics.Rotational.Components.Damper pendulumDamper2(d = 0.000025) annotation(Placement(transformation(extent = {{-10.0,-10.0},{10.0,10.0}},rotation = 180.0,origin = {90.72,67.36000000000001})));
    .Modelica.Mechanics.MultiBody.Parts.BodyCylinder pendulumAttachment2(density = 3700,r(displayUnit = "mm") = {-0.043,0,0},color = {155,155,155},diameter(displayUnit = "mm") = 0.005,r_shape(displayUnit = "mm") = {0,0,0}) annotation(Placement(transformation(extent = {{16.0,38.0},{36.0,58.0}},rotation = 0.0,origin = {0.0,0.0})));
    .Modelica.Mechanics.Rotational.Sources.Torque torque(tau(fixed = false)) annotation(Placement(transformation(extent = {{-88.0,22.0},{-68.0,42.0}},origin = {0.0,0.0},rotation = 0.0)));
    
    ControllerLQR DampingController() annotation();
    
    equation
    connect(pendulumAxis.frame_b, pendulumArm.frame_a) annotation (Line(
        points={{68,84},{70,84},{70,12}},
        color={95,95,95},
        thickness=0.5,
        smooth=Smooth.None));
    connect(base.frame_b, rotor.frame_a) annotation (Line(
        points={{0,-16},{0,0},{-6.66134e-16,0},{-6.66134e-16,22}},
        color={95,95,95},
        thickness=0.5,
        smooth=Smooth.None));
    connect(base.frame_a, fixed.frame_b) annotation (Line(
        points={{0,-36},{0,-42},{4.44089e-16,-42}},
        color={95,95,95},
        thickness=0.5,
        smooth=Smooth.None));
    connect(pendulumDamper.flange_b, pendulumAxis.support) annotation (Line(
        points={{47.599999999999994,104.8},{39.599999999999994,104.8},{39.599999999999994,94},{52,94}},
        color={0,0,0},
        smooth=Smooth.None));
    connect(pendulumDamper.flange_a, pendulumAxis.axis) annotation (Line(
        points={{67.6,104.8},{75.6,104.8},{75.6,94},{58,94}},
        color={0,0,0},
        smooth=Smooth.None));
    connect(rotorDamper.flange_a, rotor.axis) annotation (Line(
        points={{-14,42},{-10,42},{-10,32}},
        color={0,0,0},
        smooth=Smooth.None));
    connect(rotorDamper.flange_b, rotor.support) annotation (Line(
        points={{-34,42},{-40,42},{-40,26},{-10,26}},
        color={0,0,0},
        smooth=Smooth.None));
    connect(pendulumAttachment.frame_b, pendulumAxis.frame_a) annotation (Line(
        points={{35.599999999999994,84.8},{48,84.8},{48,84}},
        color={95,95,95},
        thickness=0.5,
        smooth=Smooth.None));
    connect(pendulumAttachment.frame_a, rotor.frame_b) annotation (Line(
        points={{15.599999999999994,84.8},{4.44089e-16,84.8},{4.44089e-16,42}},
        color={95,95,95},
        thickness=0.5,
        smooth=Smooth.None));
    connect(pendulumW.flange, pendulumAxis.axis) annotation (Line(
        points={{87.6,105.8},{83.6,105.8},{83.6,94},{58,94}},
        color={0,0,0},
        smooth=Smooth.None));
    connect(pendulumA.flange, pendulumAxis.axis) annotation (Line(
        points={{87.6,89.8},{83.6,89.8},{83.6,94},{58,94}},
        color={0,0,0},
        smooth=Smooth.None));
    connect(rotorW.flange, rotor.axis) annotation (Line(
        points={{-20,9},{-24,9},{-24,32},{-10,32}},
        color={0,0,0},
        smooth=Smooth.None));
    connect(rotorA.flange, rotor.axis) annotation (Line(
        points={{-20,-5},{-24,-5},{-24,32},{-10,32}},
        color={0,0,0},
        smooth=Smooth.None));
    connect(pulse.y,disturbance. force) annotation (Line(
        points={{38.6,-32},{48.4,-32}},
        color={0,0,127},
        smooth=Smooth.None));
    connect(disturbance.frame_b, pendulumArm.frame_b) annotation (Line(
        points={{66,-32},{70,-32},{70,-8}},
        color={95,95,95},
        thickness=0.5,
        smooth=Smooth.None));
    connect(pendulumAxis2.frame_b,pendulumArm2.frame_a) annotation(Line(points = {{100.72,47.35999999999998},{110,47.35999999999998},{110,12}},color = {95,95,95}));
    connect(disturbance2.frame_b,pendulumArm2.frame_b) annotation(Line(points = {{66,-46},{110,-46},{110,-8}},color = {95,95,95}));
    connect(pendulumAttachment2.frame_b,pendulumAxis2.frame_a) annotation(Line(points = {{36,48.00000000000001},{80.72,48.00000000000001},{80.72,47.36000000000001}},color = {95,95,95}));
    connect(pendulumDamper2.flange_b,pendulumAxis2.support) annotation(Line(points = {{80.71999999999997,67.35999999999999},{72.72000000000003,67.35999999999999},{72.72000000000003,57.359999999999985},{84.72,57.359999999999985}},color = {0,0,0}));
    connect(pendulumDamper2.flange_a,pendulumAxis2.axis) annotation(Line(points = {{100.72,67.35999999999999},{108.72,67.35999999999999},{108.72,57.359999999999985},{90.72,57.359999999999985}},color = {0,0,0}));
    connect(pendulumW2.flange,pendulumAxis2.axis) annotation(Line(points = {{120.72,68.35999999999999},{116.72,68.35999999999999},{116.72,57.359999999999985},{90.72,57.359999999999985}},color = {0,0,0}));
    connect(pendulumA2.flange,pendulumAxis2.axis) annotation(Line(points = {{120.72,52.359999999999985},{116.72,52.359999999999985},{116.72,57.359999999999985},{90.72,57.359999999999985}},color = {0,0,0}));
    connect(rotor.frame_b,pendulumAttachment2.frame_a) annotation(Line(points = {{2.220446049250313e-15,42},{2.220446049250313e-15,48},{16,48}},color = {95,95,95}));
    connect(disturbance2.force,pulse.y) annotation(Line(points = {{48.4,-46},{43.5,-46},{43.5,-32},{38.6,-32}},color = {0,0,127}));
    connect(rotorA.phi,DampingController.phi) annotation();
    connect(rotorW.w,DampingController.dphi) annotation();
    connect(pendulumA.phi,DampingController.theta1) annotation();
    connect(pendulumW.w,DampingController.dtheta1) annotation();
    connect(pendulumA2.phi,DampingController.theta2) annotation();
    connect(pendulumW2.w,DampingController.dtheta2) annotation();  
    connect(DampingController.u,torque.tau) annotation();
    connect(torque.flange,rotor.axis) annotation(Line(points = {{-68,32},{-10,32}},color = {0,0,0}));
    annotation (
      versionDate="2014-02-04",
      Commands(file="Furuta.mos" "Simulate Furuta pendulum", file="Animate.mos"
          "Animate Furuta pendulum"),
      experiment(NumberOfIntervals=5000, StopTime=10),
      Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},{100,
              100}}),     graphics),uses(Modelica(version = "4.0.0")));
end FurutaPendulum;
